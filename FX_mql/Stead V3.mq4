/*
   Generated by EX4-TO-MQ4 decompiler V4.0.225.1g []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "http://ryota7.taobao.com  ÍúÍú:ryota7"
#property link      "ryota7"

int gi_76 = 2;
bool gi_unused_80 = FALSE;
bool gi_unused_84 = FALSE;
int gi_88 = 198109;
string gs_stts_92 = "stts";
int gi_unused_100 = 0;
int gi_104 = 0;
int gia_108[];
int gia_112[];
int gia_116[];
double gda_120[];
double gda_124[];
double gda_128[];
double gda_132[];
double gda_136[];
double gda_140[];
double gda_144[];
double gd_148 = 0.0;
int gia_156[];
int gia_160[];
string gsa_164[];
int g_ticket_168;
int g_cmd_172;
double g_ord_lots_176;
double g_ord_open_price_184;
double g_ord_stoploss_192;
double g_ord_takeprofit_200;
double gd_208;
double g_ord_profit_216;
double gd_224;
double gd_232;
int g_datetime_240;
int g_datetime_244;
int g_datetime_248;
string gs_252;
int g_ticket_260;
int g_cmd_264;
double g_ord_lots_268;
double g_ord_open_price_276;
double g_ord_stoploss_284;
double g_ord_takeprofit_292;
double g_ord_profit_300;
double gd_308;
double gd_316;
int g_datetime_324;
int g_datetime_328;
string gs_332;
int gi_unused_340 = 0;
int g_time_344 = 0;
int gi_unused_348 = EMPTY_VALUE;
extern string starttime = "22:00";
extern string stoptime = "23:59";
extern double autopercent = 40.0;
int gi_376 = 1;
int gi_380 = 4;
extern int tp = 6;
extern int sl = 30;
int gi_392 = 8;
int gi_396 = 10;
int gi_400;
int gi_404;
bool gi_408 = FALSE;
int gi_412 = 10000;
int gi_416 = 100;
int gi_420 = 60;
int g_period_424 = 5;
extern int maxopen = 2;
bool gi_unused_432 = TRUE;
extern double minlots = 0.01;
extern double maxlots = 0.0;
extern string mondaystart = "04:00";
extern string fridayend = "20:00";
int gi_468 = 0;
int gi_unused_472 = 20101126;
int gi_unused_476 = 20101124;
int gi_480;
int gi_484;
int gi_488;
int g_datetime_492;
int gi_496;
int gi_500;
int gi_504;
int gi_508;
bool gi_512;
double gd_516;

void f00101010(int ai_0, int ai_4, bool ai_8 = TRUE) {
   if (!IsExpertEnabled() && !IsTesting()) return;
   if (ai_8 == TRUE) {
      if (ai_0 < 4) return;
      f00100101(gi_88);
      for (int l_index_12 = 0; l_index_12 < gi_104; l_index_12++) {
         if (gd_148 > 0.0 && gia_112[l_index_12] == 0 && Bid - gda_124[0] > Point * ai_4 && gda_128[0] < Bid - Point * ai_0) OrderModify(gia_108[l_index_12], gda_124[l_index_12], Bid - Point * ai_0, gda_132[l_index_12], 0, Green);
         if (gd_148 < 0.0 && gia_112[l_index_12] == 1 && gda_124[0] - Ask > Point * ai_4 && gda_128[0] > Ask + Point * ai_0 || gda_128[0] == 0.0) OrderModify(gia_108[l_index_12], gda_124[l_index_12], Ask + Point * ai_0, gda_132[l_index_12], 0, Red);
      }
   }
   if (ai_8 == FALSE) {
      if (ai_0 >= 4) {
         f00100101(gi_88);
         for (l_index_12 = 0; l_index_12 < gi_104; l_index_12++) {
            if (gd_148 > 0.0 && gia_112[l_index_12] == 0 && Bid - gda_124[l_index_12] > Point * ai_4 && gda_128[l_index_12] < Bid - Point * ai_0) OrderModify(gia_108[l_index_12], gda_124[l_index_12], Bid - Point * ai_0, gda_132[l_index_12], 0, Green);
            if (gd_148 < 0.0 && gia_112[l_index_12] == 1 && gda_124[l_index_12] - Ask > Point * ai_4 && gda_128[l_index_12] > Ask + Point * ai_0 || gda_128[l_index_12] == 0.0) OrderModify(gia_108[l_index_12], gda_124[l_index_12], Ask + Point * ai_0, gda_132[l_index_12], 0, Red);
         }
      }
   }
}

double f00100111() {
   double ld_ret_0;
   if (MarketInfo(Symbol(), MODE_MARGINCALCMODE) != 1.0) ld_ret_0 = MarketInfo(Symbol(), MODE_MARGINREQUIRED) * AccountLeverage();
   if (MarketInfo(Symbol(), MODE_MARGINCALCMODE) == 1.0) ld_ret_0 = iClose(Symbol(), 0, 1) * MarketInfo(Symbol(), MODE_LOTSIZE);
   return (ld_ret_0);
}

double f00100110(double ad_0, double ad_8 = 100.0, int ai_16 = 0) {
   double ld_ret_20 = 0;
   if (ai_16 == 0) ld_ret_20 = NormalizeDouble(f00011100(ad_0, -ad_8, ad_8), gi_76);
   else ld_ret_20 = NormalizeDouble(f00011100(ad_0, -ad_8, ad_8) * AccountEquity() / f00100111(), gi_76);
   return (ld_ret_20);
}

void f00100101(int a_magic_0) {
   int l_error_4 = 0;
   int l_ord_total_8 = OrdersTotal();
   gi_104 = 0;
   gd_148 = 0;
   int li_12 = MathMax(l_ord_total_8, 1);
   ArrayResize(gia_108, li_12);
   ArrayResize(gia_112, li_12);
   ArrayResize(gda_120, li_12);
   ArrayResize(gda_124, li_12);
   ArrayResize(gda_128, li_12);
   ArrayResize(gda_132, li_12);
   ArrayResize(gia_156, li_12);
   ArrayResize(gda_136, li_12);
   ArrayResize(gda_140, li_12);
   ArrayResize(gda_144, li_12);
   ArrayResize(gsa_164, li_12);
   ArrayResize(gia_160, li_12);
   ArrayInitialize(gia_108, 0);
   ArrayInitialize(gia_112, 0);
   ArrayInitialize(gda_120, 0);
   ArrayInitialize(gda_124, 0);
   ArrayInitialize(gda_128, 0);
   ArrayInitialize(gda_132, 0);
   ArrayInitialize(gia_156, 0);
   ArrayInitialize(gda_136, 0);
   ArrayInitialize(gda_140, 0);
   ArrayInitialize(gda_144, 0);
   ArrayInitialize(gia_160, 0);
   for (int l_pos_16 = l_ord_total_8 - 1; l_pos_16 >= 0; l_pos_16--) {
      if (!OrderSelect(l_pos_16, SELECT_BY_POS)) {
         l_error_4 = GetLastError();
         Print("OrderSelect( ", l_pos_16, ", SELECT_BY_POS ) - Error #", l_error_4);
      } else {
         if (OrderMagicNumber() == a_magic_0 && OrderSymbol() == Symbol()) {
            gia_108[gi_104] = OrderTicket();
            gia_112[gi_104] = OrderType();
            gda_120[gi_104] = NormalizeDouble(OrderLots(), 2);
            gda_124[gi_104] = NormalizeDouble(OrderOpenPrice(), Digits);
            gda_128[gi_104] = NormalizeDouble(OrderStopLoss(), Digits);
            gda_132[gi_104] = NormalizeDouble(OrderTakeProfit(), Digits);
            gia_156[gi_104] = OrderOpenTime();
            gda_136[gi_104] = NormalizeDouble(OrderProfit(), 2);
            gda_140[gi_104] = NormalizeDouble(OrderSwap(), 2);
            gda_144[gi_104] = NormalizeDouble(OrderCommission(), 2);
            gsa_164[gi_104] = OrderComment();
            gia_160[gi_104] = OrderExpiration();
            gd_148 += ((-2 * gia_112[gi_104]) + 1) * gda_120[gi_104];
            gi_104++;
         }
      }
   }
   gd_148 = NormalizeDouble(gd_148, 2);
   li_12 = MathMax(gi_104, 1);
   ArrayResize(gia_108, li_12);
   ArrayResize(gia_112, li_12);
   ArrayResize(gda_120, li_12);
   ArrayResize(gda_124, li_12);
   ArrayResize(gda_128, li_12);
   ArrayResize(gda_132, li_12);
   ArrayResize(gia_156, li_12);
   ArrayResize(gda_136, li_12);
   ArrayResize(gda_140, li_12);
   ArrayResize(gda_144, li_12);
   ArrayResize(gsa_164, li_12);
   ArrayResize(gia_160, li_12);
   ArrayResize(gia_116, li_12);
   f00101011(gia_116);
}

void f00101011(int &aia_0[]) {
   int li_4;
   double ld_8;
   double lda_16[];
   ArrayResize(lda_16, gi_104);
   ArrayCopy(lda_16, gda_120);
   for (int l_index_20 = 0; l_index_20 < gi_104; l_index_20++) {
      ld_8 = 9999;
      for (int l_index_24 = 0; l_index_24 < gi_104; l_index_24++) {
         if (ld_8 > lda_16[l_index_24]) {
            ld_8 = lda_16[l_index_24];
            li_4 = l_index_24;
         }
      }
      aia_0[l_index_20] = li_4;
      lda_16[li_4] = 9999;
   }
}

void f01010011(int a_magic_0, bool ai_4 = TRUE) {
   int l_ord_total_8 = OrdersTotal();
   int l_hist_total_12 = OrdersHistoryTotal();
   int li_unused_16 = 0;
   g_ticket_260 = 0;
   g_cmd_264 = -1;
   g_ord_lots_268 = 0;
   g_ord_open_price_276 = 0;
   g_ord_stoploss_284 = 0;
   g_ord_takeprofit_292 = 0;
   g_ord_profit_300 = 0;
   gd_308 = 0;
   gd_316 = 0;
   g_datetime_324 = 0;
   g_datetime_328 = 0;
   gs_332 = 0;
   g_ticket_168 = 0;
   g_cmd_172 = -1;
   g_ord_lots_176 = 0;
   g_ord_open_price_184 = 0;
   g_ord_stoploss_192 = 0;
   g_ord_takeprofit_200 = 0;
   gd_208 = 0;
   g_datetime_244 = 0;
   g_ord_profit_216 = 0;
   gd_224 = 0;
   gd_232 = 0;
   g_datetime_240 = 0;
   g_datetime_248 = 0;
   gs_252 = 0;
   if (ai_4 == TRUE) {
      for (int l_pos_20 = l_ord_total_8 - 1; l_pos_20 >= 0; l_pos_20--) {
         if (OrderSelect(l_pos_20, SELECT_BY_POS)) {
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_0) {
               g_ticket_260 = OrderTicket();
               g_cmd_264 = OrderType();
               g_ord_lots_268 = OrderLots();
               g_ord_open_price_276 = OrderOpenPrice();
               g_ord_stoploss_284 = OrderStopLoss();
               g_ord_takeprofit_292 = OrderTakeProfit();
               g_ord_profit_300 = OrderProfit();
               gd_308 = OrderSwap();
               gd_316 = OrderCommission();
               g_datetime_324 = OrderOpenTime();
               g_datetime_328 = OrderExpiration();
               gs_332 = OrderComment();
               break;
            }
         }
      }
      for (l_pos_20 = l_hist_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
         if (OrderSelect(l_pos_20, SELECT_BY_POS, MODE_HISTORY) == TRUE) {
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_0) {
               g_ticket_168 = OrderTicket();
               g_cmd_172 = OrderType();
               g_ord_lots_176 = OrderLots();
               g_ord_open_price_184 = OrderOpenPrice();
               g_ord_stoploss_192 = OrderStopLoss();
               g_ord_takeprofit_200 = OrderTakeProfit();
               gd_208 = OrderClosePrice();
               g_datetime_244 = OrderCloseTime();
               g_ord_profit_216 = OrderProfit();
               gd_224 = OrderSwap();
               gd_232 = OrderCommission();
               g_datetime_240 = OrderOpenTime();
               g_datetime_248 = OrderExpiration();
               gs_252 = OrderComment();
               break;
            }
         }
      }
   }
   if (ai_4 == FALSE) {
      for (l_pos_20 = l_ord_total_8 - 1; l_pos_20 >= 0; l_pos_20--) {
         if (OrderSelect(l_pos_20, SELECT_BY_POS)) {
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_0 && OrderType() <= OP_SELL) {
               g_ticket_260 = OrderTicket();
               g_cmd_264 = OrderType();
               g_ord_lots_268 = OrderLots();
               g_ord_open_price_276 = OrderOpenPrice();
               g_ord_stoploss_284 = OrderStopLoss();
               g_ord_takeprofit_292 = OrderTakeProfit();
               g_ord_profit_300 = OrderProfit();
               gd_308 = OrderSwap();
               gd_316 = OrderCommission();
               g_datetime_324 = OrderOpenTime();
               g_datetime_328 = OrderExpiration();
               gs_332 = OrderComment();
               break;
            }
         }
      }
      for (l_pos_20 = l_hist_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
         if (OrderSelect(l_pos_20, SELECT_BY_POS, MODE_HISTORY) == TRUE) {
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_0 && OrderType() <= OP_SELL) {
               g_ticket_168 = OrderTicket();
               g_cmd_172 = OrderType();
               g_ord_lots_176 = OrderLots();
               g_ord_open_price_184 = OrderOpenPrice();
               g_ord_stoploss_192 = OrderStopLoss();
               g_ord_takeprofit_200 = OrderTakeProfit();
               gd_208 = OrderClosePrice();
               g_datetime_244 = OrderCloseTime();
               g_ord_profit_216 = OrderProfit();
               gd_224 = OrderSwap();
               gd_232 = OrderCommission();
               g_datetime_240 = OrderOpenTime();
               g_datetime_248 = OrderExpiration();
               gs_252 = OrderComment();
               return;
            }
         }
      }
   }
}

void FindLastOrder(int a_cmd_0, int a_magic_4) {
   int l_ord_total_8 = OrdersTotal();
   int l_hist_total_12 = OrdersHistoryTotal();
   int li_unused_16 = 0;
   g_ticket_260 = 0;
   g_cmd_264 = -1;
   g_ord_lots_268 = 0;
   g_ord_open_price_276 = 0;
   g_ord_stoploss_284 = 0;
   g_ord_takeprofit_292 = 0;
   g_ord_profit_300 = 0;
   gd_308 = 0;
   gd_316 = 0;
   g_datetime_324 = 0;
   g_datetime_328 = 0;
   gs_332 = 0;
   g_ticket_168 = 0;
   g_cmd_172 = -1;
   g_ord_lots_176 = 0;
   g_ord_open_price_184 = 0;
   g_ord_stoploss_192 = 0;
   g_ord_takeprofit_200 = 0;
   gd_208 = 0;
   g_datetime_244 = 0;
   g_ord_profit_216 = 0;
   gd_224 = 0;
   gd_232 = 0;
   g_datetime_240 = 0;
   g_datetime_248 = 0;
   gs_252 = 0;
   for (int l_pos_20 = l_ord_total_8 - 1; l_pos_20 >= 0; l_pos_20--) {
      if (OrderSelect(l_pos_20, SELECT_BY_POS)) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_4 && OrderType() == a_cmd_0) {
            g_ticket_260 = OrderTicket();
            g_cmd_264 = OrderType();
            g_ord_lots_268 = OrderLots();
            g_ord_open_price_276 = OrderOpenPrice();
            g_ord_stoploss_284 = OrderStopLoss();
            g_ord_takeprofit_292 = OrderTakeProfit();
            g_ord_profit_300 = OrderProfit();
            gd_308 = OrderSwap();
            gd_316 = OrderCommission();
            g_datetime_324 = OrderOpenTime();
            g_datetime_328 = OrderExpiration();
            gs_332 = OrderComment();
            break;
         }
      }
   }
   for (l_pos_20 = l_hist_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
      if (OrderSelect(l_pos_20, SELECT_BY_POS, MODE_HISTORY) == TRUE) {
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == a_magic_4 && OrderType() == a_cmd_0) {
            g_ticket_168 = OrderTicket();
            g_cmd_172 = OrderType();
            g_ord_lots_176 = OrderLots();
            g_ord_open_price_184 = OrderOpenPrice();
            g_ord_stoploss_192 = OrderStopLoss();
            g_ord_takeprofit_200 = OrderTakeProfit();
            gd_208 = OrderClosePrice();
            g_datetime_244 = OrderCloseTime();
            g_ord_profit_216 = OrderProfit();
            gd_224 = OrderSwap();
            gd_232 = OrderCommission();
            g_datetime_240 = OrderOpenTime();
            g_datetime_248 = OrderExpiration();
            gs_252 = OrderComment();
            return;
         }
      }
   }
}

double f00011100(double ad_0, double ad_8, double ad_16) {
   double ld_24;
   double ld_ret_32 = ad_0;
   if (ad_8 > ad_16) {
      ld_24 = ad_8;
      ad_8 = ad_16;
      ad_16 = ld_24;
   }
   if (ad_0 < ad_8) ld_ret_32 = ad_8;
   if (ad_0 > ad_16) ld_ret_32 = ad_16;
   return (ld_ret_32);
}

int f00010101() {
   bool li_ret_0;
   if (g_time_344 < Time[0]) {
      g_time_344 = Time[0];
      li_ret_0 = TRUE;
   } else li_ret_0 = FALSE;
   return (li_ret_0);
}

int f00010011(string as_0, string as_8, bool ai_16 = TRUE) {
   bool li_ret_20 = FALSE;
   int li_unused_24 = 0;
   if (StrToTime(as_0) == StrToTime(as_8) && ai_16) li_ret_20 = TRUE;
   if (StrToTime(as_0) < StrToTime(as_8) && TimeCurrent() >= StrToTime(as_0) && TimeCurrent() < StrToTime(as_8)) li_ret_20 = TRUE;
   if (StrToTime(as_0) > StrToTime(as_8) && TimeCurrent() >= StrToTime(as_0) || TimeCurrent() < StrToTime(as_8)) li_ret_20 = TRUE;
   return (li_ret_20);
}

int f01001010(int ai_0) {
   if (ai_0 >= 0) return (0);
   int li_ret_4 = 0;
   int l_hist_total_8 = OrdersHistoryTotal();
   for (int l_pos_12 = l_hist_total_8 - 1; l_pos_12 >= 0; l_pos_12--) {
      if (OrderSelect(l_pos_12, SELECT_BY_POS, MODE_HISTORY) == FALSE) return (0);
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == gi_88) {
         if (OrderType() == OP_BUY) li_ret_4 = 1;
         if (OrderType() != OP_SELL) break;
         li_ret_4 = -1;
         break;
      }
   }
   return (li_ret_4);
}

void f01010010(int a_cmd_0, int a_magic_4, int ai_8 = 10, string a_symbol_12 = "") {
   int lia_20[];
   string l_symbol_24 = a_symbol_12;
   if (a_symbol_12 == "") l_symbol_24 = Symbol();
   int l_ord_total_32 = OrdersTotal();
   int li_unused_36 = 0;
   if (!IsExpertEnabled() && !IsTesting()) return;
   int li_40 = 0;
   int l_count_44 = 0;
   ArrayResize(lia_20, li_40);
   for (int l_pos_48 = l_ord_total_32 - 1; l_pos_48 >= 0; l_pos_48--) {
      if (OrderSelect(l_pos_48, SELECT_BY_POS)) {
         if (OrderSymbol() == l_symbol_24 && OrderMagicNumber() == a_magic_4) {
            if (OrderType() == a_cmd_0) {
               ArrayResize(lia_20, li_40 + 1);
               lia_20[li_40] = OrderTicket();
               li_40++;
            }
         }
      }
   }
   if (a_cmd_0 == OP_BUY) {
      for (l_pos_48 = 0; l_pos_48 < ArraySize(lia_20); l_pos_48++) {
         OrderSelect(lia_20[l_pos_48], SELECT_BY_TICKET);
         while (!OrderClose(lia_20[l_pos_48], OrderLots(), MarketInfo(l_symbol_24, MODE_BID), 30, White)) {
            while (IsTradeContextBusy()) Sleep(MathRand());
            l_count_44++;
            if (l_count_44 > ai_8) {
               Alert(" server is too busy ,cancel close order ", lia_20[l_pos_48]);
               break;
            }
         }
      }
   }
   if (a_cmd_0 == OP_SELL) {
      for (l_pos_48 = 0; l_pos_48 < ArraySize(lia_20); l_pos_48++) {
         OrderSelect(lia_20[l_pos_48], SELECT_BY_TICKET);
         while (!OrderClose(lia_20[l_pos_48], OrderLots(), MarketInfo(l_symbol_24, MODE_ASK), 30, White)) {
            while (IsTradeContextBusy()) Sleep(MathRand());
            l_count_44++;
            if (l_count_44 > ai_8) {
               Alert(" server is too busy ,cancel close order ", lia_20[l_pos_48]);
               break;
            }
         }
      }
   }
   if (a_cmd_0 >= OP_BUYLIMIT) {
      for (l_pos_48 = 0; l_pos_48 < ArraySize(lia_20); l_pos_48++) {
         while (!OrderDelete(lia_20[l_pos_48])) {
            while (IsTradeContextBusy()) Sleep(MathRand());
            l_count_44++;
            if (l_count_44 > ai_8) {
               Alert(" server is too busy ,cancel clear order ", lia_20[l_pos_48]);
               break;
            }
         }
      }
   }
}

int f01010001(int ai_0, double a_lots_4, int ai_12, int ai_16, int a_magic_20, int ai_24 = 5, int a_slippage_28 = 30, string a_symbol_32 = "") {
   double l_price_40;
   double l_price_48;
   string l_symbol_56 = a_symbol_32;
   if (a_symbol_32 == "") l_symbol_56 = Symbol();
   if (!IsExpertEnabled() && !IsTesting()) return;
   int l_ticket_64 = 0;
   int l_count_68 = 0;
   if (ai_0 == 0) {
      while (l_ticket_64 <= 0 && l_count_68 < ai_24) {
         while (IsTradeContextBusy()) Sleep(MathRand());
         l_ticket_64 = OrderSend(l_symbol_56, OP_BUY, a_lots_4, MarketInfo(l_symbol_56, MODE_ASK), a_slippage_28, 0, 0, gs_stts_92, a_magic_20, 0, Green);
         l_count_68++;
         if (l_ticket_64 < 0) Sleep(500);
      }
      if (l_ticket_64 > 0) {
         OrderSelect(l_ticket_64, SELECT_BY_TICKET);
         l_price_40 = OrderOpenPrice() - ai_12 * Point;
         l_price_48 = OrderOpenPrice() + ai_16 * Point;
         if (ai_12 == 0) l_price_40 = 0;
         if (ai_16 == 0) l_price_48 = 0;
         OrderModify(l_ticket_64, OrderOpenPrice(), l_price_40, l_price_48, 0);
      }
   }
   if (ai_0 == 1) {
      while (l_ticket_64 <= 0 && l_count_68 < ai_24) {
         while (IsTradeContextBusy()) Sleep(MathRand());
         l_ticket_64 = OrderSend(l_symbol_56, OP_SELL, a_lots_4, MarketInfo(l_symbol_56, MODE_BID), a_slippage_28, 0, 0, gs_stts_92, a_magic_20, 0, Red);
         l_count_68++;
         if (l_ticket_64 < 0) Sleep(500);
      }
      if (l_ticket_64 > 0) {
         OrderSelect(l_ticket_64, SELECT_BY_TICKET);
         l_price_40 = OrderOpenPrice() + ai_12 * Point;
         l_price_48 = OrderOpenPrice() - ai_16 * Point;
         if (ai_12 == 0) l_price_40 = 0;
         if (ai_16 == 0) l_price_48 = 0;
         OrderModify(l_ticket_64, OrderOpenPrice(), l_price_40, l_price_48, 0);
      }
   }
   return (l_ticket_64);
}

int f01001110(int a_cmd_0, int a_magic_4, string as_8 = "") {
   int l_count_16 = 0;
   string ls_20 = as_8;
   if (as_8 == "") ls_20 = Symbol();
   for (int l_pos_28 = 0; l_pos_28 < OrdersTotal(); l_pos_28++) {
      if (OrderSelect(l_pos_28, SELECT_BY_POS)) {
         if (OrderMagicNumber() == a_magic_4 && OrderSymbol() == ls_20)
            if (OrderType() == a_cmd_0) l_count_16++;
      }
   }
   return (l_count_16);
}

void DrawLabel(string a_name_0, string a_text_8, int a_corner_16, int a_x_20, int a_y_24, int a_window_28 = 0, color a_color_32 = 16777215, string a_fontname_36 = "Arial", int a_fontsize_44 = 12) {
   if (ObjectFind(a_name_0) == -1) ObjectCreate(a_name_0, OBJ_LABEL, a_window_28, 0, 0);
   ObjectSet(a_name_0, OBJPROP_CORNER, a_corner_16);
   ObjectSet(a_name_0, OBJPROP_XDISTANCE, a_x_20);
   ObjectSet(a_name_0, OBJPROP_YDISTANCE, a_y_24);
   ObjectSetText(a_name_0, a_text_8, a_fontsize_44, a_fontname_36, a_color_32);
}

void OrderArray(double &ada_0[], bool ai_4 = TRUE) {
   double ld_8;
   int li_16;
   double ld_20;
   int li_28;
   double ld_32;
   int l_arr_size_40 = ArraySize(ada_0);
   if (ai_4 == TRUE) {
      for (int l_index_44 = 0; l_index_44 < l_arr_size_40; l_index_44++) {
         ld_20 = 9999999;
         li_16 = l_index_44;
         for (int li_48 = l_index_44; li_48 < l_arr_size_40; li_48++) {
            if (ld_20 > ada_0[li_48]) {
               ld_20 = ada_0[li_48];
               li_16 = li_48;
            }
         }
         if (li_16 != l_index_44) {
            ld_8 = ada_0[l_index_44];
            ada_0[l_index_44] = ada_0[li_16];
            ada_0[li_16] = ld_8;
         }
      }
   }
   if (ai_4 == FALSE) {
      for (l_index_44 = 0; l_index_44 < l_arr_size_40; l_index_44++) {
         ld_32 = -9999999;
         li_28 = l_index_44;
         for (li_48 = l_index_44; li_48 < l_arr_size_40; li_48++) {
            if (ld_32 < ada_0[li_48]) {
               ld_32 = ada_0[li_48];
               li_28 = li_48;
            }
         }
         if (li_28 != l_index_44) {
            ld_8 = ada_0[l_index_44];
            ada_0[l_index_44] = ada_0[li_28];
            ada_0[li_28] = ld_8;
         }
      }
   }
}

int init() {
   if (MarketInfo(Symbol(), MODE_MINLOT) == 0.01) gi_76 = 2;
   else gi_76 = 1;
   gi_88 = Period() + 20110212;
   gi_unused_80 = FALSE;
   gi_unused_84 = FALSE;
   gs_stts_92 = Symbol() + Period() + " by " + WindowExpertName();
   g_datetime_492 = TimeCurrent();
   gi_496 = f00110011();
   f00010101();
   kf00111001(1);
   f01001010(5);
   gi_400 = tp;
   gi_404 = sl;
   return (0);
}

int f00110011() {
   return (1);
}

int deinit() {
   return (0);
}

int start() {
   /*if (AccountNumber() != 135524) {
      Alert("ÕËºÅÎ´¾­ÊÚÈ¨£¬ÇëÓë×÷ÕßÁªÏµ  QQ:45215454  ÍúÍú:ryota7");
      return (0);
   }*/
   gi_504 = kf00111001(1);
   gi_508 = cf00111001(1);
   gi_500 = f00010101();
   gi_512 = f00010011(starttime, stoptime);
   if (TimeDayOfWeek(TimeCurrent()) == 1 && StrToTime(mondaystart) > TimeCurrent()) gi_512 = FALSE;
   if (TimeDayOfWeek(TimeCurrent()) == 5 && StrToTime(fridayend) < TimeCurrent()) gi_512 = FALSE;
   startcommon();
   return (0);
}

int startcommon() {
   double ld_0;
   orderinit();
   if (gi_480 == 0) {
      gd_516 = f00100110(autopercent, 100, gi_376);
      ld_0 = maxlots;
      if (maxlots <= 0.0) ld_0 = 999999;
      gd_516 = f00011100(gd_516, ld_0, minlots);
   }
   orderinit();
   if (gi_508 >= 1 && gi_488 > 0) f01010010(OP_SELL, gi_88);
   if (gi_508 <= -1 && gi_484 > 0) f01010010(OP_BUY, gi_88);
   orderinit();
   if (gi_504 == 2 && gi_484 > 0 && gi_512 && gi_480 < maxopen) {
      FindLastOrder(OP_BUY, gi_88);
      if (iBarShift(NULL, 0, g_datetime_324) > gi_396) f01010001(0, gd_516, gi_404, gi_400, gi_88, 1, gi_468);
   }
   orderinit();
   if (gi_504 == -2 && gi_480 > 0 && gi_512 && gi_480 < maxopen) {
      FindLastOrder(OP_SELL, gi_88);
      if (iBarShift(NULL, 0, g_datetime_324) > gi_396) f01010001(1, gd_516, gi_404, gi_400, gi_88, 1, gi_468);
   }
   orderinit();
   if (gi_504 == 2 && gi_480 == 0 && gi_512) f01010001(0, gd_516, gi_404, gi_400, gi_88, 1, gi_468);
   orderinit();
   if (gi_504 == -2 && gi_480 == 0 && gi_512) f01010001(1, gd_516, gi_404, gi_400, gi_88, 1, gi_468);
   if (gi_408) f00101010(gi_416, gi_412);
   TrailTp(gi_392, gi_392);
   return (0);
}

void orderinit() {
   gi_484 = f01001110(OP_BUY, gi_88);
   gi_488 = f01001110(OP_SELL, gi_88);
   gi_480 = gi_484 + gi_488;
   f01010011(gi_88);
   f00100101(gi_88);
}

int kf00111001(int ai_0) {
   double lda_4[];
   double lda_8[];
   int li_ret_12 = 0;
   ArrayResize(lda_4, gi_420);
   ArrayResize(lda_8, gi_420);
   for (int l_count_16 = 0; l_count_16 < gi_420; l_count_16++) {
      lda_4[ai_0 + l_count_16] = High[ai_0 + l_count_16];
      lda_8[ai_0 + l_count_16] = Low[ai_0 + l_count_16];
   }
   OrderArray(lda_4, 1);
   OrderArray(lda_8, 0);
   double l_ima_on_arr_20 = iMAOnArray(lda_4, 0, g_period_424, 0, MODE_SMA, 0);
   double l_ima_on_arr_28 = iMAOnArray(lda_8, 0, g_period_424, 0, MODE_SMA, 0);
   DrawLabel("starttime", "¿ªÊ¼Ê±¼ä£º" + starttime, 0, 20, 20);
   DrawLabel("stoptime", "½áÊøÊ±¼ä£º" + stoptime, 0, 20, 40);
   DrawLabel("lots", "ÏÂµ¥ÊÖÊý£º" + DoubleToStr(gd_516, 2), 0, 20, 60);
   if (Bid > l_ima_on_arr_20) li_ret_12 = -2;
   if (Ask < l_ima_on_arr_28 + gi_380 * Point) li_ret_12 = 2;
   return (li_ret_12);
}

int cf00111001(int ai_unused_0) {
   bool li_ret_4 = FALSE;
   return (li_ret_4);
}

void TrailTp(int ai_0, int ai_unused_4, bool ai_8 = FALSE) {
   if (!IsExpertEnabled() && !IsTesting()) return;
   if (ai_8 == TRUE) {
      if (ai_0 < 4) return;
      f00100101(gi_88);
      for (int l_index_12 = 0; l_index_12 < gi_104; l_index_12++) {
         if (gd_148 > 0.0 && gia_112[l_index_12] == 0 && gda_132[0] > Bid + gi_392 * Point) OrderModify(gia_108[l_index_12], gda_124[l_index_12], gda_128[l_index_12], Bid + gi_392 * Point, 0, Green);
         if (gd_148 < 0.0 && gia_112[l_index_12] == 1 && Ask - gi_392 * Point > gda_132[0]) OrderModify(gia_108[l_index_12], gda_124[l_index_12], gda_128[l_index_12], Ask - gi_392 * Point, 0, Red);
      }
   }
   if (ai_8 == FALSE) {
      if (ai_0 >= 4) {
         f00100101(gi_88);
         for (l_index_12 = 0; l_index_12 < gi_104; l_index_12++) {
            if (gd_148 > 0.0 && gia_112[l_index_12] == 0 && gda_132[l_index_12] > Bid + gi_392 * Point) OrderModify(gia_108[l_index_12], gda_124[l_index_12], gda_128[l_index_12], Bid + gi_392 * Point, 0, Green);
            if (gd_148 < 0.0 && gia_112[l_index_12] == 1 && Ask - gi_392 * Point > gda_132[l_index_12]) OrderModify(gia_108[l_index_12], gda_124[l_index_12], gda_128[l_index_12], Ask - gi_392 * Point, 0, Red);
         }
      }
   }
}